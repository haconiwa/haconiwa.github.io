{
  "name": "Haconiwa - the mruby on container",
  "tagline": "Tha haconiwa teaser site",
  "body": "# Haconiwa\r\n\r\n[![Build Status](https://travis-ci.org/haconiwa/haconiwa.svg?branch=master)](https://travis-ci.org/haconiwa/haconiwa)\r\n\r\nmRuby on Container / helper tools with DSL for your handmade linux containers.\r\n\r\nHaconiwa (`箱庭` - a miniature garden) is a container builder DSL, by which you can choose any container-related technologies as you like:\r\n\r\n- Linux namespace\r\n- Linux control group(cgroup)\r\n- Linux capabilities\r\n- Bind mount / chroot\r\n- Resource limit(rlimit)\r\n- setuid/setgid\r\n- ...\r\n\r\nHaconiwa is written in [mruby](https://mruby.org/), so you can utilize Ruby DSL for creating your own container.\r\n\r\n## Install binary\r\n\r\n`haconiwa` packages are provided via [packagecloud](https://packagecloud.io/udzura/haconiwa).\r\n\r\nAvailable for: `CentOS >= 7 / Ubuntu Trusty / Ubuntu Xenial / Debian jessie` (which are supported by best effort...)\r\n\r\nOther linuxes users can just download binaries from [latest](https://github.com/haconiwa/haconiwa/releases):\r\n\r\n```bash\r\nVERSION=0.2.2\r\nwget https://github.com/haconiwa/haconiwa/releases/download/v${VERSION}/haconiwa-v${VERSION}.x86_64-pc-linux-gnu.tgz\r\ntar xzf haconiwa-v${VERSION}.x86_64-pc-linux-gnu.tgz\r\nsudo install hacorb hacoirb haconiwa /usr/local/bin\r\nhaconiwa\r\n# haconiwa - The MRuby on Container\r\n# commands:\r\n#     run       - run the container\r\n#     attach    - attach to existing container\r\n#     version   - show version\r\n#     revisions - show mgem/mruby revisions which haconiwa bin uses\r\n```\r\n\r\nNOTE: If you'd like using cgroup-related features, install cgroup package such as `cgroup-lite` (Ubuntu) or `cgroup-bin` (Debian).\r\nIf you would not, these installation are not required.\r\n\r\n## Example\r\n\r\nCreate the file `example.haco`:\r\n\r\n```ruby\r\nHaconiwa::Base.define do |config|\r\n  config.name = \"new-haconiwa001\" # to be hostname\r\n\r\n  config.cgroup[\"cpu.shares\"] = 2048\r\n  config.cgroup[\"memory.limit_in_bytes\"] = \"256M\"\r\n  config.cgroup[\"pid.max\"] = 1024\r\n\r\n  config.add_mount_point \"/var/another/root/etc\", to: \"/var/your_rootfs/etc\", readonly: true\r\n  config.add_mount_point \"/var/another/root/home\", to: \"/var/your_rootfs/home\"\r\n  config.mount_independent_procfs\r\n  config.chroot_to \"/var/your_rootfs\"\r\n\r\n  config.namespace.unshare \"ipc\"\r\n  config.namespace.unshare \"uts\"\r\n  config.namespace.unshare \"mount\"\r\n  config.namespace.unshare \"pid\"\r\n\r\n  config.capabilities.allow :all\r\n  config.capabilities.drop \"cap_sys_admin\"\r\nend\r\n```\r\n\r\nThen use `haconiwa` binary installed with thie gem.\r\n\r\n```console\r\n$ haconiwa run example.haco\r\n```\r\n\r\n\r\nWhen you want to attach existing container:\r\n\r\n```console\r\n$ haconiwa attach example.haco\r\n```\r\n\r\nNote: `attach` subcommand allows to set PID(`--target`) or container name(`--name`) for dynamic configuration.\r\nAnd `attach` is not concerned with capabilities which is granted to container. So you can drop or allow specific caps with `--drop/--allow`.\r\n\r\n### DSL spec\r\n\r\n* `config.resource.set_limit` - Set the resource limit of container, using `setrlimit`\r\n* `config.cgroup` - Assign cgroup parameters via `[]=`\r\n* `config.namespace.unshare` - Unshare the namespaces like `\"mount\"`, `\"ipc\"` or `\"pid\"`\r\n* `config.capabilities.allow` - Allow capabilities on container root. Setting parameters other than `:all` should make this acts as whitelist\r\n* `config.capabilities.drop` - Drop capabilities of container root. Default to act as blacklist\r\n* `config.add_mount_point` - Add the mount point odf container\r\n* `config.mount_independent_procfs` - Mount the independent /proc directory in the container. Useful if `\"pid\"` is unshared\r\n* `config.chroot_to` - The new chroot root\r\n* `config.uid=/config.gid=` - The new container's running uid/gid. `groups=` is also respected\r\n* `config.add_handler` - Define signal handler at supervisor process(not container itself). Available signals are `SIGTTIN/SIGTTOU/SIGUSR1/SIGUSR2`. See [handler example](https://github.com/haconiwa/haconiwa/blob/master/sample/cpu.haco).\r\n\r\nYou can pick your own parameters for your use case of container.\r\ne.g. just using `mount` namespace unshared, container with common filesystem, limit the cgroups for big resource job and so on.\r\n\r\nPlease look into [`sample`](https://github.com/haconiwa/haconiwa/blob/master/sample) directory.\r\n\r\n### Programming the container world by mruby\r\n\r\ne.g.:\r\n\r\n```ruby\r\nNamespace.unshare(Namespace::CLONE_NEWNS)\r\nNamespace.unshare(Namespace::CLONE_NEWPID)\r\n\r\nm = Mount.new\r\n\r\nm.make_private \"/\"\r\nm.bind_mount \"/var/lib/myroot\", \"/var/lib/haconiwa/root\"\r\n\r\nDir.chroot \"/var/lib/haconiwa\"\r\nDir.chdir \"/\"\r\n\r\nc = Process.fork {\r\n  m.mount \"proc\", \"/proc\", :type => \"proc\"\r\n  Exec.exec \"/bin/sh\"\r\n}\r\npid, ret = Process.waitpid2 c\r\nputs \"Container exited with: #{ret.inspect}\"\r\n```\r\n\r\nSee dependent gem's READMEs.\r\n\r\n## Development\r\n\r\n* `rake compile` will create binaries.\r\n* `rake` won't be passed unless you are not on Linux.\r\n* This project is built upon great [mruby-cli](https://github.com/hone/mruby-cli). Please browse its README.\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome on GitHub at https://github.com/haconiwa/haconiwa. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.\r\n\r\n## TODOs\r\n\r\n* [ ] Haconiwa DSL compiler\r\n* [ ] netns attachment\r\n* [ ] More utilities such as `ps`\r\n* [ ] Better daemon handling\r\n\r\n## License\r\n\r\nHaconiwa core is under the GPL v3 License: See [LICENSE](https://github.com/haconiwa/haconiwa/blob/master/LICENSE) file.\r\n\r\nBundled libraries (libcap, libcgroup, libargtable and mruby) are licensed by each authors. See `LICENSE_*` file.\r\n\r\nFor other mgems' licenses, especially ones which are not bundled by mruby-core, please refer their `github.com` repository.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}